# Simple GitLab CI/CD Pipeline for Paint Application

# Define stages
stages:
  - test
  - build
  - deploy

# Cache node_modules for faster builds
cache:
  paths:
    - node_modules/

# Test stage - Run Jest tests
test:
  stage: test
  image: node:18-alpine
  script:
    - echo "Installing dependencies..."
    - npm ci
    - echo "Running tests..."
    - npm test
  artifacts:
    reports:
      junit: junit.xml
    paths:
      - coverage/
    expire_in: 1 week
  only:
    - branches

# Build stage - Prepare application files
build:
  stage: build
  image: alpine:latest
  script:
    - echo "Building application..."
    - mkdir dist
    - cp index.html dist/
    - cp style.css dist/
    - cp main.js dist/
    - cp canvas.js dist/
    - cp drawing.js dist/
    - cp shapes.js dist/
    - cp ui.js dist/
    - cp undoRedo.js dist/
    - cp storage.js dist/
    - cp -r icons dist/ 2>/dev/null || echo "No icons folder found, skipping..."
    - echo "Build completed successfully"
    - ls -la dist/
  artifacts:
    paths:
      - dist/
    expire_in: 1 week
  only:
    - branches

# Deploy to GitLab Pages
pages:
  stage: deploy
  image: alpine:latest
  dependencies:
    - build
  script:
    - echo "Deploying to GitLab Pages..."
    - mkdir public
    - cp -r dist/* public/
    - echo "Deployment ready"
    - ls -la public/
  artifacts:
    paths:
      - public
    expire_in: 1 week
  only:
    - main
    - master